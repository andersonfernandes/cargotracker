/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 14:16:47 GMT 2022
 */

package org.eclipse.cargotracker.domain.model.cargo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import org.eclipse.cargotracker.domain.model.cargo.Delivery;
import org.eclipse.cargotracker.domain.model.cargo.HandlingActivity;
import org.eclipse.cargotracker.domain.model.cargo.Itinerary;
import org.eclipse.cargotracker.domain.model.cargo.RouteSpecification;
import org.eclipse.cargotracker.domain.model.cargo.RoutingStatus;
import org.eclipse.cargotracker.domain.model.cargo.TransportStatus;
import org.eclipse.cargotracker.domain.model.handling.HandlingEvent;
import org.eclipse.cargotracker.domain.model.handling.HandlingHistory;
import org.eclipse.cargotracker.domain.model.location.Location;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Delivery_ESTest extends Delivery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      Itinerary itinerary0 = new Itinerary();
      LocalDateTime localDateTime0 = itinerary0.getFinalArrivalDate();
      delivery0.setCalculatedAt(localDateTime0);
      assertNull(delivery0.getTransportStatus());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      delivery0.setUnloadedAtDestination(true);
      boolean boolean0 = delivery0.isUnloadedAtDestination();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      delivery0.setMisdirected(true);
      boolean boolean0 = delivery0.isMisdirected();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      TransportStatus transportStatus0 = TransportStatus.IN_PORT;
      delivery0.setTransportStatus(transportStatus0);
      TransportStatus transportStatus1 = delivery0.getTransportStatus();
      assertEquals(TransportStatus.IN_PORT, transportStatus1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      RoutingStatus routingStatus0 = RoutingStatus.ROUTED;
      delivery0.setRoutingStatus(routingStatus0);
      RoutingStatus routingStatus1 = delivery0.getRoutingStatus();
      assertEquals(RoutingStatus.ROUTED, routingStatus1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Itinerary itinerary0 = Itinerary.EMPTY_ITINERARY;
      RouteSpecification routeSpecification0 = new RouteSpecification();
      Delivery delivery0 = new Delivery((HandlingEvent) null, itinerary0, routeSpecification0);
      delivery0.getNextExpectedActivity();
      assertFalse(delivery0.isUnloadedAtDestination());
      assertFalse(delivery0.isMisdirected());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Itinerary itinerary0 = Itinerary.EMPTY_ITINERARY;
      Delivery delivery0 = new Delivery((HandlingEvent) null, itinerary0, (RouteSpecification) null);
      LocalDateTime localDateTime0 = delivery0.getCalculatedAt();
      assertFalse(delivery0.isMisdirected());
      assertFalse(delivery0.isUnloadedAtDestination());
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      Delivery delivery1 = new Delivery();
      // Undeclared exception!
      try { 
        delivery0.equals(delivery1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/EqualsBuilder
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Delivery", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HandlingEvent handlingEvent0 = new HandlingEvent();
      Itinerary itinerary0 = new Itinerary();
      RouteSpecification routeSpecification0 = new RouteSpecification();
      Delivery delivery0 = null;
      try {
        delivery0 = new Delivery(handlingEvent0, itinerary0, routeSpecification0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.eclipse.cargotracker.domain.model.location.Location
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Itinerary", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      delivery0.getTransportStatus();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      boolean boolean0 = delivery0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      boolean boolean0 = delivery0.equals(delivery0.NO_ACTIVITY);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Itinerary itinerary0 = Itinerary.EMPTY_ITINERARY;
      RouteSpecification routeSpecification0 = new RouteSpecification();
      Delivery delivery0 = new Delivery((HandlingEvent) null, itinerary0, routeSpecification0);
      boolean boolean0 = delivery0.isUnloadedAtDestination();
      assertFalse(boolean0);
      assertFalse(delivery0.isMisdirected());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      RouteSpecification routeSpecification0 = new RouteSpecification();
      Itinerary itinerary0 = Itinerary.EMPTY_ITINERARY;
      // Undeclared exception!
      try { 
        delivery0.updateOnRouting(routeSpecification0, itinerary0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/Validate
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Delivery", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      LocalDateTime localDateTime0 = delivery0.getEstimatedTimeOfArrival();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      delivery0.getRoutingStatus();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Delivery delivery0 = new Delivery((HandlingEvent) null, (Itinerary) null, (RouteSpecification) null);
      // Undeclared exception!
      try { 
        delivery0.getCurrentVoyage();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.eclipse.cargotracker.domain.model.voyage.Voyage
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Delivery", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      // Undeclared exception!
      try { 
        delivery0.getLastKnownLocation();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.eclipse.cargotracker.domain.model.location.Location
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Delivery", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      HandlingEvent handlingEvent0 = new HandlingEvent();
      delivery0.setLastEvent(handlingEvent0);
      assertNull(delivery0.getTransportStatus());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      HandlingActivity handlingActivity0 = delivery0.getNextExpectedActivity();
      assertNull(handlingActivity0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Itinerary itinerary0 = new Itinerary();
      RouteSpecification routeSpecification0 = new RouteSpecification();
      // Undeclared exception!
      try { 
        Delivery.derivedFrom(routeSpecification0, itinerary0, (HandlingHistory) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/Validate
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Delivery", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      // Undeclared exception!
      try { 
        delivery0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/HashCodeBuilder
         //
         verifyException("org.eclipse.cargotracker.domain.model.cargo.Delivery", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      LocalDateTime localDateTime0 = delivery0.getCalculatedAt();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      boolean boolean0 = delivery0.isMisdirected();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Delivery delivery0 = new Delivery();
      delivery0.setLastKnownLocation((Location) null);
      assertNull(delivery0.getTransportStatus());
  }
}
